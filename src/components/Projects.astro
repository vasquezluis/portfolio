---
import Project from "@/components/Project.astro"
import Container from "@/components/Container.astro"

import Code from "@/components/icons/Code.astro"
import { getWorks, getProjects } from "@/utils/data"
const works = await getWorks(Astro.url)
const projects = await getProjects(Astro.url)

const { t } = Astro.props
---

<Container id="projects">
	<h2 class="mb-6 flex items-center gap-x-3 text-2xl font-semibold">
		<Code />
		{t("proj.title")}
	</h2>

	<div class="flex flex-col items-center justify-center gap-y-3">
		<div class="w-full">
			<button id="buttonWorks" class="selected">{t("proj.tabWo")}</button>
			<button id="buttonProjects">{t("proj.tabPr")}</button>
		</div>

		<section id="worksSection" class="projectsShow grid-cols-1 gap-3 md:grid-cols-2">
			{
				works.map((item) => (
					<Project
						imageUrl={item.imageUrl}
						url={item.url}
						title={item.title}
						tags={item.tags}
						description={item.description}
						type={item.type}
					/>
				))
			}
		</section>

		<section id="projectsSection" class="projectsHide grid-cols-1 gap-3 md:grid-cols-2">
			{
				projects.map((item) => (
					<Project
						imageUrl={item.imageUrl}
						url={item.url}
						title={item.title}
						tags={item.tags}
						description={item.description}
						type={item.type}
					/>
				))
			}
		</section>
	</div>
</Container>

<script>
	document.addEventListener("astro:page-load", () => {
		const buttonWorks = document.getElementById("buttonWorks")
		const buttonProjects = document.getElementById("buttonProjects")
		const worksContainer = document.getElementById("worksSection")
		const projectsContainer = document.getElementById("projectsSection")

		const updateLS = (value: string) => {
			window.localStorage.setItem("tab", value)
		}

		const showWorks = () => {
			projectsContainer?.classList.remove("projectsShow")
			projectsContainer?.classList.add("projectsHide")

			worksContainer?.classList.remove("projectsHide")
			worksContainer?.classList.add("projectsShow")

			buttonWorks?.classList.add("selected")
			buttonProjects?.classList.remove("selected")

			updateLS("works")
		}

		const showProjects = () => {
			worksContainer?.classList.remove("projectsShow")
			worksContainer?.classList.add("projectsHide")

			projectsContainer?.classList.remove("projectsHide")
			projectsContainer?.classList.add("projectsShow")

			buttonProjects?.classList.add("selected")
			buttonWorks?.classList.remove("selected")

			updateLS("projects")
		}

		const valueFromLS = window.localStorage.getItem("tab")
		if (valueFromLS !== null) {
			if (valueFromLS === "works") {
				showWorks()
			} else if (valueFromLS === "projects") {
				showProjects()
			}
		}

		buttonWorks?.addEventListener("click", showWorks)
		buttonProjects?.addEventListener("click", showProjects)
	})
</script>

<style>
	button {
		padding: 0.25rem 0.5rem;
	}
	.selected {
		border-bottom: 1px solid white;
	}

	.projectsShow {
		display: grid;
	}

	.projectsHide {
		display: none;
	}
</style>
