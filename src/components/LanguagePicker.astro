---
import { useTranslatedPath } from "@/i18n/utils"

const { lang, languages } = Astro.props
const translatePath = useTranslatedPath(lang)
---

<div class="dropdown">
	<button id="dropbtn" class="dropbtn"
		>{
			lang === "es" ? (
				<img src="/icons/spanish.svg" alt="Spanish icon" class="size-8" loading="eager" />
			) : (
				<img src="/icons/english.svg" alt="English icon" class="size-8" loading="lazy" />
			)
		}</button
	>
	<div id="myDropdown" class="dropdown-content">
		{
			Object.entries(languages).map(([langPrefix]) => (
				<a href={translatePath("/", langPrefix)} title={`${langPrefix} version`}>
					{langPrefix === "es" ? (
						<img src="/icons/spanish.svg" alt="Spanish icon" class="size-8" loading="eager" />
					) : (
						<img src="/icons/english.svg" alt="English icon" class="size-8" loading="lazy" />
					)}
					{langPrefix}
				</a>
			))
		}
	</div>

	<style>
		.dropbtn {
			@apply cursor-pointer;
		}

		.dropdown {
			@apply relative flex items-center justify-center;
		}

		.dropdown-content {
			@apply absolute left-0 top-8 z-[1] hidden
		rounded-md bg-black;
		}

		.dropdown-content a {
			@apply flex items-center justify-center gap-2 rounded-md px-5 py-1 text-white;
		}

		.dropdown-content a:hover {
			@apply bg-neutral-600;
		}

		.show {
			@apply block;
		}
	</style>

	<script>
		document.addEventListener("astro:page-load", function () {
			const dropDown = document.getElementById("myDropdown")
			const button = document.getElementById("dropbtn")

			button?.addEventListener("click", function (event) {
				event.stopPropagation()
				dropDown?.classList.toggle("show")
			})

			document.addEventListener("click", function (event) {
				if (!button?.contains(event.target as Node) && !dropDown?.contains(event.target as Node)) {
					dropDown?.classList.remove("show")
				}
			})

			const links = dropDown?.querySelectorAll("a")
			links?.forEach(function (link) {
				link.addEventListener("click", function () {
					dropDown?.classList.remove("show") // Close dropdown after selecting an item
				})
			})
		})
	</script>
</div>
